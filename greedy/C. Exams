import java.util.Arrays;

import java.util.Scanner;

public class C_Exams {

    static Scanner in=new Scanner(System.in);
    
   static int n; 
   
    public static void main(String[] amit) {
        
        n=in.nextInt();
        
        schedule a[]=new schedule[n];
        
        schedule last = null;
        
        for(int i=0;i<n;i++){
            
            a[i]=new schedule(in.nextLong(),in.nextLong());
            
            last=a[i];
            
        }
        
        Arrays.sort(a);
        
       /* for(schedule i: a){
            
            System.out.println(i.ai+" "+i.bi);
            
        }*/
        
       long ans=-1;
       
       for(schedule i: a){
           
           if(i.bi>=ans ){
               
               ans=i.bi;
               
           }else{
               
               ans=i.ai;
               
           }
           
       } 
        
        System.out.println(ans);
       
    }
    
    static class schedule implements Comparable<schedule>{
        
        long ai,bi;

        public schedule(long ai, long bi) {
            this.ai = ai;
            this.bi = bi;
        }

        @Override
        public int compareTo(schedule t) {
       //     throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        
       if( Long.compare(this.ai, t.ai)==1){ 
           
          return 1;
                   
        }else if(Long.compare(this.ai, t.ai)==-1 ){
            
            return -1;
            
        }
       
       return Long.compare(this.bi, t.bi);
       
        }

        @Override
        public int hashCode() {
            int hash = 3;
            hash = (int) (67 * hash + this.ai);
            hash = (int) (67 * hash + this.bi);
            return hash;
        }

        @Override
        public boolean equals(Object obj) {
            if (this == obj) {
                return true;
            }
            if (obj == null) {
                return false;
            }
            if (getClass() != obj.getClass()) {
                return false;
            }
            final schedule other = (schedule) obj;
            if (this.ai != other.ai) {
                return false;
            }
            return this.bi == other.bi;
        }
          
    }
    
}
/*

3
5 2
3 1
4 2


*/

/*

3
6 1
5 2
4 3


*/

/*

5
4 3
4 2
4 1
4 1
4 1

*/
