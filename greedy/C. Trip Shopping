
    static void C(int t) {

        Element element[] = new Element[n];

        for (int i = 0; i < n; ++i) {

            element[i] = new Element(a[i], b[i]);

        }

        Arrays.sort(element);

        sum = 0L;

        for (Element i : element) {

            sub = Long.parseLong(sub(Math.max(i.first, i.second) + "", Math.min(i.first, i.second) + ""));

            sum = Long.parseLong(sum(sum + "", sub + ""));

        }

        long _sum = (long) (1e18);

        for (int i = 0; i < n - 1; ++i) {

            sub = (Math.min(element[i + 1].first, element[i + 1].second) - Math.max(element[i].first, element[i].second));

            _sum = Math.min(sub, _sum);

        }

        _sum = Math.max(0L, _sum);

        _sum = Long.parseLong(mul(_sum + "", "2"));

        sum = Long.parseLong(sum(sum + "", _sum + ""));

        ans.append(sum);

        if (t != testCases) {

            ans.append("\n");

        }

    }


    private static class Element implements Comparable<Element> {

        long first, second, third;

        public Element(long first, long second) {
            this.first = first;
            this.second = second;
        }

        public Element(long first, long second, long third) {
            this.first = first;
            this.second = second;
            this.third = third;
        }

        public Element(long first) {

            this.first = first;

        }

        @Override
        public int compareTo(Element element) {

            if (this.first > element.first) {

                return 1;

            } else if (this.first < element.first) {

                return -1;

            }

            return 0;

        }

    }

