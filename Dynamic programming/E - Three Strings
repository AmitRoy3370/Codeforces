static void E(int i, long dp[][]) {
 
        if (i > n) {
 
            return;
 
        }
 
        for (int j = 0; j <= m; ++j) {
 
            if (i == 0 && j == 0) {
 
                continue;
 
            }
 
            int position = i + j - 1;
 
            if (position >= z.length) {
 
                continue;
 
            }
 
            if (i > 0) {
 
                sum = dp[i - 1][j];
 
                if (x[i - 1] != z[position]) {
 
                    sum = Long.parseLong(sum(dp[i - 1][j] + "", "1"));
 
                }
 
                if (isSmaller(sum + "", dp[i][j] + "")) {
 
                    dp[i][j] = sum;
 
                }
 
            }
 
            if (j > 0) {
 
                sum = dp[i][j - 1];
 
                if (y[j - 1] != z[position]) {
 
                    sum = Long.parseLong(sum(dp[i][j - 1] + "", "1"));
 
                }
 
                if (isSmaller(sum + "", dp[i][j] + "")) {
 
                    dp[i][j] = sum;
 
                }
 
            }
 
        }
 
        E(i + 1, dp);
 
    }
 
    static void E(int t) {
 
        long dp[][] = new long[n + 1][m + 1];
 
        for (int i = 0; i <= n; ++i) {
 
            for (int j = 0; j <= m; ++j) {
 
                dp[i][j] = (long) (1e9);
 
            }
 
        }
 
        dp[0][0] = 0L;
 
        E(0, dp);
 
        ans.append(dp[n][m]);
 
        if (t != testCases) {
 
            ans.append("\n");
 
        }
 
    }
 
