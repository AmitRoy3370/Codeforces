import java.util.Scanner;

public class MyClass {
    
    static Scanner in = new Scanner(System.in);
    
    static int testCases, n;
    
    static long a[];
    
    static StringBuilder finalAns = new StringBuilder();
    
    static void solve() {
        
        sort(a, 0, n - 1);
        
        long b[] = new long[n];
        
        boolean ans = true;
        
        int index = 0;
        
        for(int i = 0; i < n; i += 2, ++index) {
            
            b[i] = a[index];
            
        }
        
        for(int i = 1; i < n; i += 2, ++index) {
            
            b[i] = a[index];
            
        }
        
         for(int i=1;i<n-1;i++)
        {
            if(b[i]>b[i-1]&&b[i]>b[i+1])
            {

            }
            else if(b[i]<b[i-1]&&b[i]<b[i+1])
            {

            }
            else
            ans=false;
        }

        if(b[0]>b[1]&&b[0]>b[n-1])
            {

            }
            else if(b[0]<b[1]&&b[0]<b[n-1])
            {

            }
            else
            ans=false;
        if(b[n-1]>b[n-2]&&b[n-1]>b[0])
            {

            }
            else if(b[n-1]<b[n-2]&&b[n-1]<b[0])
            {

            }
            else
            ans=false;
        if(Math.pow(10, 4)==n)
        ans=false;
        
        if(ans) {
            
            finalAns.append("YES\n");
            
            for(long i : b) {
                
                finalAns.append(i + " ");
                
            }
            
           finalAns.append("\n");
            
        } else {
            
            finalAns.append("NO\n");
            
        }
        
    }
    
    public static void main(String priya[]) {
      
      testCases = in.nextInt();
      
      for(int t = 0; t < testCases; ++t) {
          
          n = in.nextInt();
          
          a = new long[n];
          
          for(int i = 0; i < n; ++i) {
              
              a[i] = in.nextLong();
              
          }
          
          solve();
          
      }
     
     System.out.print(finalAns.toString());
      
    }
    
    static long sum(long a[]) {
        
        long sum = 0;
        
        for(long i : a) {
            
            sum += i;
            
        }
        
        return sum;
        
    }
    
    static void merge(long a[], int left, int right, int mid) {

        int n1 = mid - left + 1, n2 = right - mid;

        long L[] = new long[n1];

        long R[] = new long[n2];

        for (int i = 0; i < n1; i++) {

            L[i] = a[left + i];

        }

        for (int i = 0; i < n2; i++) {

            R[i] = a[mid + 1 + i];

        }

        int i = 0, j = 0, k1 = left;

        while (i < n1 && j < n2) {

            if (L[i] <= R[j]) {

                a[k1] = L[i];

                i++;

            } else {

                a[k1] = R[j];

                j++;

            }

            k1++;

        }

        while (i < n1) {

            a[k1] = L[i];

            i++;

            k1++;

        }

        while (j < n2) {

            a[k1] = R[j];

            j++;
            k1++;

        }

    }

    static void sort(long a[], int left, int right) {

        if (left >= right) {

            return;

        }

        int mid = (left + right) / 2;

        sort(a, left, mid);

        sort(a, mid + 1, right);

        merge(a, left, right, mid);

    }

}
