static long A(int i, long sum) {
 
        if (i >= 2 * n) {
 
            return sum;
 
        }
 
        sum = Long.parseLong(sum(a[i] + "", sum + ""));
 
        return A(i + 1, sum);
 
    }
 
    static void A(int t) {
 
        sum = A(0, 0L);
 
        //System.out.println(sum);
        String maxOn = isSmaller(sum + "", sub(mul("2", n + ""), sum + "")) ? sum + "" : sub(mul("2", n + ""), sum + "");
 
        ans.append((mod(sum + "", 2L)) ).append(" ").append(Long.parseLong(maxOn) );
 
        if (t != testCases) {
 
            ans.append("\n");
 
        }
 
    }
 
    public static void main(String[] Amit) throws IOException {
 
        testCases = in.nextInt();
        //testCases = 1;
 
        //b = new long[200004];
        for (int t = 0; t < testCases; ++t) {
 
            A_input();
            A(t + 1);
 
        }
 
        out.print(ans.toString());
        out.flush();
 
    }
 
    private static void A_input() throws IOException {
 
        n = in.nextInt();
 
        a = new long[n * 2];
 
        for (int i = 0; i < n * 2; ++i) {
 
            a[i] = in.nextLong();
 
        }
 
    }
